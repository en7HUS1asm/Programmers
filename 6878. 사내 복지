어느 추운 겨울 날, 스타트업의 CEO 기성이는 직원들이 추위에 떨며 근무하는 모습에 마음이 아팠습니다. 사무실에 전열기 등의 난방기구가 전혀 없다는 것을 깨달은 기성이는 급하게 전열기 3개를 주문하였습니다. 이제 세 전열기를 사무실에 적절하게 배치하려고 합니다.
사무실은 N행 M열, 총 N × M칸의 격자로 나눌 수 있습니다. 각 칸에는 직원이 최대 한 명 근무하고 있습니다. i행 j열에 위치한 칸과 k행 l열에 위치한 칸 사이의 거리는 (i - k 의 절댓값) + (j - l 의 절댓값)과 같습니다. 직원들은 각 전열기와의 거리의 합 만큼 추위를 느낀다고 합니다. 예를 들어 한 직원이 (1, 1)에서 근무중이고 세 전열기가 (2, 2), (3, 4), (3, 6)에 설치되었다고 합시다. 이 직원은 14(= 2 + 5 + 7)만큼의 추위를 느끼게 됩니다.
전열기를 설치할 위치는 직원이 있는 칸이여도 되고, 심지어 이미 다른 전열기가 설치되어 있는 칸이여도 됩니다. 사무실의 크기와 직원들의 위치가 주어지면, 전열기 3개를 설치한 뒤 직원들이 느끼는 추위의 합의 최솟값을 출력하는 프로그램을 작성해 주세요.

예제 입력1
3 3
101
000
101
예제 출력1
24
예제 입력2
3 5
00001
10001
00000
예제 출력2
15

입력값 설명
첫째 줄에 두 정수 N과 M이 공백으로 구분되어 주어집니다. (3 ≤ N ≤ 8, 3 ≤ M ≤ 8)
다음 N개에 줄에 걸쳐 각 줄에 M개의 문자가 주어집니다.
i + 1번째 줄의 j번째 문자가 1이라면 사무실의 i행 j열에 위치한 칸에 직원이 있다는 뜻이고, 0이라면 없다는 뜻입니다.
사무실에 직원이 한 명도 없는 경우는 주어지지 않습니다.
출력값 설명
전열기 3개를 설치한 뒤 직원들이 느끼는 추위의 합의 최솟값을 출력합니다.


# -*- coding: utf-8 -*-
import sys

a, b = map(int, sys.stdin.readline().split())
samu = [sys.stdin.readline().strip() for i in range(a)]

jik = []
jar = []
for i in range (a):
    for j in range (b):
        jar.append([i,j])
        if samu[i][j]=='1':
            jik.append([i,j])
            
minn = []          
for i in range(a*b):
    happ=0
    for j in range (len(jik)):
        happ += abs(jik[j][0]-jar[i][0])+ abs(jik[j][1]-jar[i][1])
    minn.append(happ)

minn.sort()

print(minn[0]*3)
