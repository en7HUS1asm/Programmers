N개의 원소가 포함된 배열 a가 주어집니다. 배열의 i번째 원소를 a_i로 표기합니다. a_i는 1 이상 1,000,000,000 이하 양의 정수입니다.
배열 a에는 중복된 수가 포함될 수 있습니다. 즉, i ≠ j이면서 a_i = a_j인 i, j 쌍이 존재할 수 있습니다.
배열 a에서 가장 많이 등장하는 수를 구하는 프로그램을 작성해주세요.
예를 들어 N = 5, 배열 a의 원소들이 1, 3, 2, 4, 3이라고 가정하겠습니다. 이 경우 배열 a에서 가장 많이 등장하는 수는 3입니다.

예제 입력1
5
1 3 2 4 3
예제 출력1
3

예제 입력2
4
4 2 4 2
예제 출력2
2

입력값 설명
첫째 줄에 원소의 개수 N이 주어집니다. (1 ≤ N ≤ 1,000)
둘째 줄에 a_i가 공백으로 구분되어 주어집니다. (1 ≤ a_i ≤ 1,000,000,000)
출력값 설명
첫째 줄에 배열 a에서 가장 많이 등장하는 수를 출력합니다. 조건을 만족하는 수가 여러 개이면 그 중 가장 작은 수를 출력합니다.
(배열 a에 겹치는 수가 없는 경우는 모든 숫자가 등장 횟수가 같은 것이므로 같은 방식으로 그 중 가장 작은 숫자를 출력하면 됩니다.)


# -*- coding: utf-8 -*-
import sys

n = int(sys.stdin.readline())
a_j = list(map(int, sys.stdin.readline().split()))

a_j.sort()

mn = a_j[0]
maxi=1

for i in range (n):
    cnt = 0
    if a_j.count(a_j[i]) > maxi:
        maxi = a_j.count(a_j[i])
        mn = a_j[i]
                
print(mn)
